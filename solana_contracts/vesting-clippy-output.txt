   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling version_check v0.9.5
   Compiling typenum v1.18.0
   Compiling serde v1.0.219
    Checking cfg-if v1.0.1
   Compiling libc v0.2.174
    Checking subtle v2.6.1
   Compiling autocfg v1.5.0
   Compiling zerocopy v0.8.26
   Compiling generic-array v0.14.7
   Compiling quote v1.0.40
   Compiling syn v2.0.104
   Compiling syn v1.0.109
   Compiling num-traits v0.2.19
    Checking getrandom v0.2.16
   Compiling semver v1.0.26
    Checking rand_core v0.6.4
   Compiling crunchy v0.2.4
    Checking cpufeatures v0.2.17
   Compiling getrandom v0.1.16
   Compiling rustc_version v0.4.1
   Compiling ahash v0.8.12
   Compiling equivalent v1.0.2
    Checking opaque-debug v0.3.1
   Compiling hashbrown v0.15.4
    Checking ppv-lite86 v0.2.21
    Checking rand_core v0.5.1
   Compiling num-integer v0.1.46
    Checking rand_chacha v0.3.1
   Compiling indexmap v2.10.0
   Compiling digest v0.9.0
    Checking rand v0.8.5
    Checking once_cell v1.21.3
   Compiling winnow v0.7.12
   Compiling toml_datetime v0.6.11
    Checking block-padding v0.2.1
   Compiling paste v1.0.15
    Checking either v1.15.0
    Checking ark-std v0.4.0
   Compiling libsecp256k1-core v0.2.2
    Checking num-bigint v0.4.6
   Compiling thiserror v1.0.69
   Compiling toml_edit v0.22.27
    Checking hashbrown v0.13.2
    Checking itertools v0.10.5
    Checking rand_chacha v0.2.2
    Checking byteorder v1.5.0
   Compiling rustversion v1.0.21
   Compiling shlex v1.3.0
   Compiling cc v1.2.31
    Checking rand v0.7.3
   Compiling proc-macro-crate v3.3.0
   Compiling serde_derive v1.0.219
   Compiling zeroize_derive v1.4.2
   Compiling ark-serialize-derive v0.4.2
    Checking zeroize v1.3.0
   Compiling ark-ff-asm v0.4.2
   Compiling ark-ff-macros v0.4.2
   Compiling derivative v2.2.0
   Compiling thiserror-impl v1.0.69
   Compiling toml v0.5.11
   Compiling libsecp256k1-gen-genmult v0.2.1
   Compiling libsecp256k1-gen-ecmult v0.2.1
    Checking keccak v0.1.5
   Compiling cfg_aliases v0.2.1
   Compiling feature-probe v0.1.1
   Compiling borsh v1.5.7
   Compiling bv v0.11.1
   Compiling libsecp256k1 v0.6.0
   Compiling blake3 v1.8.2
   Compiling bytemuck_derive v1.10.1
   Compiling proc-macro-crate v0.1.5
   Compiling borsh-schema-derive-internal v0.10.4
   Compiling borsh-derive-internal v0.10.4
   Compiling memoffset v0.9.1
    Checking arrayref v0.3.9
   Compiling borsh-derive v0.10.4
   Compiling borsh-derive v1.5.7
   Compiling solana-program v2.0.25
    Checking bytemuck v1.23.1
   Compiling bs58 v0.5.1
    Checking constant_time_eq v0.3.1
    Checking lazy_static v1.5.0
    Checking base64 v0.12.3
    Checking arrayvec v0.7.6
   Compiling solana-sdk-macro v2.0.25
    Checking borsh v0.10.4
   Compiling num-derive v0.4.2
    Checking log v0.4.27
    Checking base64 v0.22.1
   Compiling fnv v1.0.7
   Compiling strsim v0.11.1
   Compiling ident_case v1.0.1
   Compiling darling_core v0.20.11
    Checking signature v1.6.4
   Compiling num_enum_derive v0.7.4
    Checking ed25519 v1.5.3
   Compiling block-buffer v0.10.4
   Compiling crypto-common v0.1.6
   Compiling serde_json v1.0.142
   Compiling digest v0.10.7
   Compiling solana-sdk v2.0.25
    Checking ryu v1.0.20
    Checking percent-encoding v2.3.1
    Checking derivation-path v0.2.0
    Checking memchr v2.7.5
    Checking itoa v1.0.15
    Checking num_enum v0.7.4
    Checking qstring v0.7.2
   Compiling sha2 v0.10.9
    Checking uriparse v0.6.4
    Checking itertools v0.12.1
    Checking chrono v0.4.41
    Checking memmap2 v0.5.10
    Checking siphasher v0.3.11
    Checking merlin v3.0.0
    Checking bitflags v2.9.1
    Checking bincode v1.3.3
    Checking block-buffer v0.9.0
    Checking crypto-mac v0.8.0
    Checking sha2 v0.9.9
    Checking curve25519-dalek v3.2.1
    Checking hmac v0.8.1
    Checking hmac-drbg v0.3.0
    Checking ark-serialize v0.4.2
    Checking ark-ff v0.4.2
    Checking sha3 v0.10.8
    Checking serde_bytes v0.11.17
    Checking inout v0.1.4
    Checking ed25519-dalek v1.0.1
    Checking cipher v0.4.4
   Compiling darling_macro v0.20.11
    Checking hmac v0.12.1
    Checking universal-hash v0.5.1
    Checking ctr v0.9.2
    Checking polyval v0.6.2
    Checking ed25519-dalek-bip32 v0.2.0
    Checking aes v0.8.4
    Checking pbkdf2 v0.11.0
   Compiling darling v0.20.11
    Checking aead v0.5.2
   Compiling serde_with_macros v2.3.3
    Checking sha3 v0.9.1
   Compiling spl-discriminator-syn v0.2.0
    Checking aes-gcm-siv v0.11.1
   Compiling spl-program-error-derive v0.4.1
   Compiling spl-discriminator-derive v0.2.0
   Compiling curve25519-dalek v4.1.3
    Checking serde_with v2.3.3
   Compiling thiserror v2.0.17
   Compiling thiserror-impl v2.0.17
   Compiling curve25519-dalek-derive v0.1.1
    Checking solana-security-txt v1.1.1
    Checking solana-curve25519 v2.3.13
    Checking ark-poly v0.4.2
    Checking ark-ec v0.4.2
    Checking ark-bn254 v0.4.0
    Checking spl-program-error v0.5.0
    Checking spl-discriminator v0.3.0
    Checking spl-memo v5.0.0
    Checking spl-token v6.0.0
    Checking spl-associated-token-account-client v1.0.0
    Checking solana-zk-sdk v2.0.25
    Checking spl-pod v0.4.0
    Checking spl-token-confidential-transfer-proof-generation v0.1.0
    Checking spl-token-confidential-transfer-ciphertext-arithmetic v0.1.0
    Checking spl-token-confidential-transfer-proof-extraction v0.1.0
    Checking spl-type-length-value v0.6.0
    Checking spl-token-group-interface v0.4.2
    Checking spl-tlv-account-resolution v0.8.1
    Checking spl-token-metadata-interface v0.5.1
    Checking spl-transfer-hook-interface v0.8.2
    Checking spl-token-2022 v5.0.2
    Checking spl-associated-token-account v5.0.1
    Checking vesting_contract v0.1.0 (/home/ssofixd/Documents/ondrix_Projects/vesting_ondrix/solana_vesting_ondrix_cont)
warning: unexpected `cfg` condition value: `custom-heap`
  --> src/lib.rs:10:1
   |
10 | entrypoint!(process_instruction);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: no expected values for `feature`
   = note: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate
   = help: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg
   = help: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program` crate, try updating your dependency with `cargo update -p solana_program`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default
   = note: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the macro `entrypoint` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `solana`
  --> src/lib.rs:10:1
   |
10 | entrypoint!(process_instruction);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more
   = note: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate
   = help: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg
   = help: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program` crate, try updating your dependency with `cargo update -p solana_program`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the macro `entrypoint` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `custom-panic`
  --> src/lib.rs:10:1
   |
10 | entrypoint!(process_instruction);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: no expected values for `feature`
   = note: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate
   = help: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg
   = help: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program` crate, try updating your dependency with `cargo update -p solana_program`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the macro `entrypoint` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `solana`
  --> src/lib.rs:10:1
   |
10 | entrypoint!(process_instruction);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more
   = note: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate
   = help: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg
   = help: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program` crate, try updating your dependency with `cargo update -p solana_program`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the macro `entrypoint` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `msg`
 --> src/processor.rs:5:5
  |
5 |     msg,
  |     ^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: variable `successful_distributions` is assigned to, but never used
   --> src/processor.rs:437:13
    |
437 |     let mut successful_distributions = 0u8;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: consider using `_successful_distributions` instead
    = note: `#[warn(unused_variables)]` on by default

warning: all variants have the same prefix: `Invalid`
  --> src/instruction.rs:8:1
   |
 8 | / pub enum InstructionError {
 9 | |     InvalidInstructionData,
10 | |     InvalidRecipientCount,
11 | |     InvalidTotalPercentage,
12 | | }
   | |_^
   |
   = help: remove the prefixes and use full paths to the variants instead of glob imports
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names
   = note: `#[warn(clippy::enum_variant_names)]` on by default

warning: the loop variable `i` is used to index `recipient_atas`
   --> src/processor.rs:442:14
    |
442 |     for i in 0..vesting.recipient_count as usize {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
    = note: `#[warn(clippy::needless_range_loop)]` on by default
help: consider using an iterator and enumerate()
    |
442 -     for i in 0..vesting.recipient_count as usize {
442 +     for (i, <item>) in recipient_atas.iter().enumerate().take(vesting.recipient_count as usize) {
    |

warning: returning the result of a `let` binding from a block
   --> src/processor.rs:550:5
    |
548 |     let total_vested = tge_amount + linear_vested;
    |     ---------------------------------------------- unnecessary `let` binding
549 |     
550 |     total_vested
    |     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
    = note: `#[warn(clippy::let_and_return)]` on by default
help: return the expression directly
    |
548 ~     
549 |     
550 ~     tge_amount + linear_vested
    |

warning: this `impl` can be derived
  --> src/state.rs:18:1
   |
18 | / impl Default for Recipient {
19 | |     fn default() -> Self {
20 | |         Self {
21 | |             wallet: Pubkey::default(),
...  |
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
   = note: `#[warn(clippy::derivable_impls)]` on by default
help: replace the manual implementation with a derive attribute
   |
11 + #[derive(Default)]
12 ~ pub struct Recipient {
   |

warning: this `impl` can be derived
  --> src/state.rs:39:1
   |
39 | / impl Default for VestingSchedule {
40 | |     fn default() -> Self {
41 | |         Self {
42 | |             cliff_period: 0,
...  |
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
help: replace the manual implementation with a derive attribute
   |
30 + #[derive(Default)]
31 ~ pub struct VestingSchedule {
   |

warning: the loop variable `i` is used to index `recipients`
   --> src/state.rs:145:18
    |
145 |         for i in 0..MAX_RECIPIENTS {
    |                  ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
145 -         for i in 0..MAX_RECIPIENTS {
145 +         for (i, <item>) in recipients.iter_mut().enumerate().take(MAX_RECIPIENTS) {
    |

warning: `vesting_contract` (lib test) generated 12 warnings (12 duplicates)
warning: `vesting_contract` (lib) generated 12 warnings (run `cargo clippy --fix --lib -p vesting_contract` to apply 4 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 33.31s
